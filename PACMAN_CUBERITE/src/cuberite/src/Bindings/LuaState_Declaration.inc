
// LuaState_Declaration.inc

// This file is generated along with the Lua bindings by ToLua. Do not edit manually, do not commit to repo.
// Implements a Push() and GetStackValue() function for each class exported to the Lua API.
// This file expects to be included form inside the cLuaState class definition





void Push(cArrowEntity * a_Value);
void Push(cBeaconEntity * a_Value);
void Push(cBedEntity * a_Value);
void Push(cBlockArea * a_Value);
void Push(cBlockEntity * a_Value);
void Push(cBlockEntityWithItems * a_Value);
void Push(cBlockInfo * a_Value);
void Push(cBoat * a_Value);
void Push(cBoundingBox * a_Value);
void Push(cBrewingstandEntity * a_Value);
void Push(cChatColor * a_Value);
void Push(cChestEntity * a_Value);
void Push(cChunkDesc * a_Value);
void Push(cClientHandle * a_Value);
void Push(cColor * a_Value);
void Push(cCommandBlockEntity * a_Value);
void Push(cCompositeChat * a_Value);
void Push(cCraftingGrid * a_Value);
void Push(cCraftingRecipe * a_Value);
void Push(cCuboid * a_Value);
void Push(cDispenserEntity * a_Value);
void Push(cDropperEntity * a_Value);
void Push(cDropSpenserEntity * a_Value);
void Push(cEnchantments * a_Value);
void Push(cEntityEffect * a_Value);
void Push(cExpBottleEntity * a_Value);
void Push(cExpOrb * a_Value);
void Push(cFallingBlock * a_Value);
void Push(cFile * a_Value);
void Push(cFireChargeEntity * a_Value);
void Push(cFireworkEntity * a_Value);
void Push(cFloater * a_Value);
void Push(cFlowerPotEntity * a_Value);
void Push(cFurnaceEntity * a_Value);
void Push(cGhastFireballEntity * a_Value);
void Push(cHangingEntity * a_Value);
void Push(cHopperEntity * a_Value);
void Push(cIniFile * a_Value);
void Push(cInventory * a_Value);
void Push(cItem * a_Value);
void Push(cItemFrame * a_Value);
void Push(cItemGrid * a_Value);
void Push(cItems * a_Value);
void Push(cJukeboxEntity * a_Value);
void Push(cLeashKnot * a_Value);
void Push(cLuaWindow * a_Value);
void Push(cMap * a_Value);
void Push(cMapManager * a_Value);
void Push(cMobHeadEntity * a_Value);
void Push(cMobSpawnerEntity * a_Value);
void Push(cMojangAPI * a_Value);
void Push(cMonster * a_Value);
void Push(cNoteEntity * a_Value);
void Push(cObjective * a_Value);
void Push(cPainting * a_Value);
void Push(cPawn * a_Value);
void Push(cPickup * a_Value);
void Push(cPlayer * a_Value);
void Push(cPlugin * a_Value);
void Push(cPluginLua * a_Value);
void Push(cPluginManager * a_Value);
void Push(cProjectileEntity * a_Value);
void Push(cRoot * a_Value);
void Push(cScoreboard * a_Value);
void Push(cServer * a_Value);
void Push(cSignEntity * a_Value);
void Push(cSplashPotionEntity * a_Value);
void Push(cStatManager * a_Value);
void Push(cTeam * a_Value);
void Push(cThrownEggEntity * a_Value);
void Push(cThrownEnderPearlEntity * a_Value);
void Push(cThrownSnowballEntity * a_Value);
void Push(cTNTEntity * a_Value);
void Push(cTracer * a_Value);
void Push(cUUID * a_Value);
void Push(cWebAdmin * a_Value);
void Push(cWindow * a_Value);
void Push(cWitherSkullEntity * a_Value);
void Push(cWorld * a_Value);
void Push(HTTPFormData * a_Value);
void Push(HTTPRequest * a_Value);
void Push(HTTPTemplateRequest * a_Value);
void Push(TakeDamageInfo * a_Value);
void Push(Vector3<double> * a_Value);
void Push(Vector3<float> * a_Value);
void Push(Vector3<int> * a_Value);
bool GetStackValue(int a_StackPos, PtrcArrowEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcArrowEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcBeaconEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcBeaconEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcBedEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcBedEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcBlockArea & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcBlockArea & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcBlockEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcBlockEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcBlockEntityWithItems & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcBlockEntityWithItems & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcBlockInfo & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcBlockInfo & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcBoat & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcBoat & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcBoundingBox & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcBoundingBox & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcBrewingstandEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcBrewingstandEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcChatColor & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcChatColor & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcChestEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcChestEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcChunkDesc & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcChunkDesc & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcClientHandle & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcClientHandle & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcColor & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcColor & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcCommandBlockEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcCommandBlockEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcCompositeChat & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcCompositeChat & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcCraftingGrid & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcCraftingGrid & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcCraftingRecipe & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcCraftingRecipe & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcCuboid & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcCuboid & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcDispenserEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcDispenserEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcDropperEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcDropperEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcDropSpenserEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcDropSpenserEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcEnchantments & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcEnchantments & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcEntityEffect & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcEntityEffect & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcExpBottleEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcExpBottleEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcExpOrb & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcExpOrb & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcFallingBlock & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcFallingBlock & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcFile & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcFile & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcFireChargeEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcFireChargeEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcFireworkEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcFireworkEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcFloater & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcFloater & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcFlowerPotEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcFlowerPotEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcFurnaceEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcFurnaceEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcGhastFireballEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcGhastFireballEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcHangingEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcHangingEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcHopperEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcHopperEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcIniFile & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcIniFile & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcInventory & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcInventory & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcItem & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcItem & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcItemFrame & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcItemFrame & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcItemGrid & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcItemGrid & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcItems & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcItems & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcJukeboxEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcJukeboxEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcLeashKnot & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcLeashKnot & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcLuaWindow & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcLuaWindow & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcMap & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcMap & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcMapManager & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcMapManager & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcMobHeadEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcMobHeadEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcMobSpawnerEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcMobSpawnerEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcMojangAPI & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcMojangAPI & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcMonster & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcMonster & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcNoteEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcNoteEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcObjective & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcObjective & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcPainting & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcPainting & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcPawn & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcPawn & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcPickup & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcPickup & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcPlayer & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcPlayer & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcPlugin & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcPlugin & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcPluginLua & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcPluginLua & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcPluginManager & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcPluginManager & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcProjectileEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcProjectileEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcRoot & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcRoot & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcScoreboard & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcScoreboard & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcServer & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcServer & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcSignEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcSignEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcSplashPotionEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcSplashPotionEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcStatManager & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcStatManager & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcTeam & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcTeam & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcThrownEggEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcThrownEggEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcThrownEnderPearlEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcThrownEnderPearlEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcThrownSnowballEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcThrownSnowballEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcTNTEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcTNTEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcTracer & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcTracer & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcUUID & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcUUID & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcWebAdmin & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcWebAdmin & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcWindow & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcWindow & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcWitherSkullEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcWitherSkullEntity & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrcWorld & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrcWorld & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrHTTPFormData & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrHTTPFormData & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrHTTPRequest & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrHTTPRequest & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrHTTPTemplateRequest & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrHTTPTemplateRequest & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrTakeDamageInfo & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrTakeDamageInfo & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrVector3d & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrVector3d & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrVector3f & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrVector3f & a_ReturnedVal);
bool GetStackValue(int a_StackPos, PtrVector3i & a_ReturnedVal);
bool GetStackValue(int a_StackPos, ConstPtrVector3i & a_ReturnedVal);





