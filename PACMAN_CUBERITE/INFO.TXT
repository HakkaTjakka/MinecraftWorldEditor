Make poster(s)

1)	Edit LAT_LONG_CENTER.js and set lat0,lat1,lon0,lon1 (north,south,west,east) (see examples, use Google Maps -> click mouse, lat/lon at bottom of screen)
	lat0,lon0 = upper left corner
	lat1,lon1 = lower right corner

2)	Make sure you installed javascript (node, right version)
	run DUMP_OCTANTS.BAT or type:
	node LAT_LONG_CENTER.JS > city.out
	Result will be file with c++ program data to insert into pacman_cuberite\src\include\test_data.hpp
	Add according line in function: 
		std::string areas(int q) {...} and
		std::string get_area_data(std::string area_name, int &x, int &y) {...}
	Compile pacman.exe with codeblocks and seh compiler. (See: install codeblocks)

3) 	Use output from LAT_LONG_CENTER.JS to create batch file with lines like:
		node DUMP_OBJ_CITY.js 21424171424252435 21 --parallel-search --MIAMI
	Run the batch file, quit after loading one octant dir, or just run line one from command line. 
	Edit this first .obj file in the downloaded_files\obj\ downloaded octand dir, get first vertex coordinates (before dec. point) for x,y and z. 
	Use these to adapt DUMP_OBJ_CITY.js, lines like:
		else if (CITYNAME[0]=="--MIAMI")		{	offset_x=975859; 					offset_y=-5652918; 				offset_z=2771644; }
	and insert correct line with city name and offsets like this.
	Keep these offsets for later use...
	Edit file lib\parse-command-line2.js and add city name data also, see examples:
		if (optional.filter(o => !['--dump-json', '--dump-raw', '--parallel-search','--ENSCHEDE','--MIAMI', '--AMSTERDAM', '--BRUSSEL',  '--LA',  '--NEWYORK', '--JOCELYN' ].includes(o)).length > 0) errors.push('Invalid parameters.');
		CITYNAME: optional.filter(o => ['--MIAMI', '--ENSCHEDE', '--AMSTERDAM', '--BRUSSEL',  '--LA',  '--NEWYORK', '--JOCELYN' ].includes(o)),
	Offsets (first octant is the middle one...) will be used to subtract from x,y,z vertex data when downloading, to make them smaller for loading later into GPU
	Delete the dir with the first octant data
	Run the batch file to download all octants to downloaded_files\obj
	When downloaded copy them to downloaded_files\new\cityname
	Eventually you can use Irfanview and/or powershell Ubuntu batch/.sh files to convert .jpg and .bmp into .png. However, program will (try to load) either type, .jpg||.bmp||.png....

4) pacman.exe:
	Edit pacman.ini file. Set BITMAPSX and BITMAPSY to minimal size of poster you want, like 100 and 50 for poster size 100x50 hd screens (1920x1080)
	Make sure your octants are located in one of the three used dirs like downloaded_files\new\cityname
	Press BACKSPACE to select one of the cities/areas downloaded.
	Load one of them with '6' or ctrl-6. If ok one octant will be loaded in second screen, fullscreen or window. F11 to change screen <-> window.

	Press 'b'. Program will check which of the octants listed in the generated and in test_data.cpp inserted code is present, in on of the 3 dirs:
	EARTH_ROOT1 or EARTH_ROOT2 or EARTH_ROOT3. 
	When all in one dir (you can use 3 different drives/directories with the earth donwload javascript system) you can put on top (EARTH_ROOT1).
	Because program will check this dir first for octant dir present or not. If found, the OCTANTNUMBER.dat file generated by the javascript is checked.
	In it are the min/max values of the object vertexes. If the .dat file is not present, it will generate it by scanning the vertexes in the .obj file.
	IMPORTANT: When using different language system, set it to dutch (NL), or adapt winapi.cpp: setlocale function. It has to do with writing/reading floating points, with decimal point ('.') or comma (','). Use right combinations of windows settings/setlocale() function. (See source for example).
	When ok, you have generated a new 3d object, with wireframe only data, of ALL objects downloaded.
	So the system can load this to access all blocks locations/sizes. It should be in ..\models

	Press ctrl-q to exit the 3d window with the one loaded octant.
	Use backspace to select the 'area' : Models, its in the ..\models dir if ok, and contains the collective octants 3d object. All with corrected x,y,z vertex data. 0,0,0 will be the first loaded octants which will be in the center.
	Because of the LAT_LONG_CENTER.JS sorts the octants from middle to outer side. You can adapt this code to select circle around this center, or create block shape around it. (See javeascript code of the program).
	
	General keys on loading objects: ctrl+system+alt + left/right/up/down : load previous/next object to the left/right/up/down of the current, and delete the current from GPU memory.
	ctrl+alt + left/right/up/down : load previous/next object to the left/right/up/down of the current, and KEEP the current. Will be added into GPU memory.
	'q': close 3d object window, but keep background thread running. Shift-q: close window and end thread.
	'z': Save configuration of loaded objects to OBJECT_ARRAY.TXT. When from main screen shift-v is used (CROSSING=1), then when opening 3d window with '6' or ctrl-6 will load all objects in this file.
	'x': Load configuration from OBJECT_ARRAY.TXT. Objects will be loaded like when opened 3d windows with shift-v (CROSSING=1)
	Delete/rename that file from OS if not wanted/needed. Like when using 'b' (see above) for octants check, otherwise it only will run check on the ones in OBJECT_ARRAY.TXT and create an global object from it. (Used for smaller posters/area's)

	When the model is loaded, you can use the mouse trackball to position the whole octants object to the view you want.
	Use left/middle/right mousebutton and move/rotate/zoom it.
	Press 'f', you will get a 8x8 size grid showing the frustums. Larger grid (smaller frustums, more): shift+alt+f, less: ctrl+alt+f
	Less/more horizontal: 'h' / shift-h. Less/more vertical: 'v' / shift-v
	Start position frustums: ctrl-v / alt-v for vertical ctrl-h / alt-h for horizontal positioning.
	Size frustums: 'v' / shift-v and 'h' / shift-h
	F5: debug info on/of, F6/F7/F8 reset rotations/translation/zoom/perspective of octant object. F3 orthografic perspective / normal 3d perspective.
	Keypad (NumLock on) 7 / 8 : perspective angle. Don't use other keypad numbers for like translation/rotation with ctrl/shift/alt keys etc. They are not recorded. So use the preset/resetted values and use trackball mouse for positioning/translation/rotation. The perspective angles (7/9) and perspective type (F3) are recorded and used.

To be continued soon. (next is ctrl-b in 3d screen, main screen shift-d, shift-g, shift-f6, shift-d, wait few minutes/hours/days for poster.

3d window: (see viewer_my_events.h)
	f12 hide/show window
	f9 plane (experimental) (shift-f9 recover, ctrl-f9 visible on/of)
	ctrl-f12 4k screen (3840x2160 pixels for 4k recordings) (see also pacman.ini for ffmpeg commands, put ffmpeg\bin in path)
	f11 window/fullscreen. 
	'm' marker
	'e' erase marker file
	'p' next marker position
	shift-'p' play interpolation (200) between markers for every frame.
	'r' record.


order:
	load the 3d objects from the net with the node.js system in earth\
		generate with: node LAT_LONG_CENTER.js and/or (adapt) DUMP_OCTANTS.BAT
			part of output to put in pacman_cuberite\src\include\test_data.hpp and compile with codeblocks
			part of output to download in .bat file
			part of file for debugging
		run the .bat file with the download commands from output of dump_octants.bat
		move the earth\downloaded_files\obj to new\areaname
		put the path to the new\ dir in pacman.ini, you can use three different 'downloaded_files\new' directories with dir named after area (see code on area).
	set other options in pacman.ini file
	start pacman.exe from command line with right paths set (see setpath_seh_64_v7.bat file for path settings to ffmpeg\bin pacman_cuberite\bin node.js etc.
	backspace to select model fixed in code (viewer dir), or 'model' for model dir from pacman.ini with list.txt and makelist.bat file for listing 3d objects
	f6 full screen load object
	ctrl-f6 window load object (f11 change to full)
	'b' for creating .dat files with .obj dimensions. Used to create model\areaname.obj with dimensions of all .obj files for later use.
	when object loaded from models\ (backspace) positioned, and frustums are set, press:
		shift-b for generating models\areaname.cam file. With for each frustem x,y a list of used 3d objects in this area. for later use...
	ctrl-b for loading this file, and wait for other window.
	other window:
		shift-d : select background window
		shift-g : select FORMULA=1
		shift-f6 : put all empty background textures from levels\XxY\levelnum\picture.*.*.png in list
		shift-g (2x) : select FORMULA=somenumber is gone...
		The loading should begin from the 3d window... then when rendered displayed in the main window.
	press ctrl-y for zooming out (uses 8x8 bitmaps in pacman.ini setting, and higher if alt- -/+ is used) 
	
	use all sorts of keys to mess things up, also read readme file(s).... (just try...)

Added:
	alt-b when 3d object loaded makes all .obj files to .nbt (named binary tag) files. (nbtexplorer.exe). Loads significant faster. (see dir viewer\*.h* files)
	ctrl-d use vertex and fragment shader on 3d model displayed. Create depth planes, morphing, effects on gpu etc.
	
If you want to use the code and system and need a manual: gerardwensink@gmail.com (when still alive...)	





